# -*- coding: utf-8 -*-
"""exnp4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-B5OBXmIbaMTMcKf-UIQPK-F5o65wYOE
"""

# 배열에 행 또는 열 추가
import numpy as np

aa = np.eye(3, 3)
print('aa : \n', aa)

bb = np.c_[aa, aa[2]]
print(bb)
cc = np.r_[aa, [aa[2]]]
print(cc)

a = np.array([1,2,3])
print(a)
print(np.c_[a]) # 3행 1열로 바꿈 구조 변경시에도 사용
print(a.reshape((3,1)))

# append, insert, delete
print(a)
b = np.append(a, [4,5]) # 열방향으로 요소값 추가
print(b)
c = np.insert(a, 0, [6, 7]) # 0번째 지점부터 6,7을 추가
print(c)
#d = np.delete(a, 1)
#d = np.delete(a, [1])
d = np.delete(a, [1,2])
print(d)

print('\n2차원=======================') # 2차원 배열
aa = np.arange(1, 10).reshape(3, 3)
print(aa)
print(np.insert(aa, 1, 99)) #1차원으로 바꾸고 99를 1번째에 값 추가
print(np.insert(aa, 1, 99, axis=0)) # axis를 주면 차원은 그대로 유지하면서 index는 1이고 99로 구성된 열을 추가해줌, 행기준 작업
print(np.insert(aa, 1, 99, axis=1)) # 열기준 차원은 그대로 유지하면서 index는 1이고 99로 구성된 행을 추가

print()
bb = np.arange(10, 19).reshape(3, 3)
print(bb)
cc = np.append(aa, bb)
print(cc) # axis를 지정하지 않으면 1차원 배열로 변형되어 결합

print()
cc = np.append(aa, bb, axis = 0) # 행방향으로
print(cc)
cc = np.append(aa, bb, axis = 1) # 열방향으로
print(cc)

print()
print(np.delete(aa, 1))
print(np.delete(aa, 1, axis = 0)) # 행 삭제
print(np.delete(aa, 1, axis = 1)) # 열 삭제

# 배열에서 조건 연산
x = np.array([1,2,3])
y = np.array([4,5,6])
conditionData = np.array([True, False, True])
result = np.where(conditionData, x, y) # 참이면 x배열 거짓이면 y배열
print(result)
print()
aa = np.where(x >= 2) # 조건에 맞는 인덱스 출력
print(aa)
print(np.where(x >= 2, 'T', 'F'))
print(np.where(x >= 2, x, x + 500))
print()
kbs = np.concatenate([x, y]) # 배열 2개를 합치고 차원이 축소 배열결합
print(kbs)
x1, x2 = np.split(kbs, 2)
print(x1)
print(x2) #hsplit, vsplit

# sampling (표본 추출)
import random
li = np.array([1,2,3,4,5,6,7])

# 복원 추출
for _ in range(5):
    print(li[random.randint(0, len(li) - 1)], end = ' ')
  
print()
# 비복원 추출
print(random.sample(list(li), k = 5)) # random.sample(list type)

print(random.sample(range(1, 46), k = 6))
print() # choice
print(list(np.random.choice(range(1, 46), 6))) # 기본값이 replace = True # 복원
print(list(np.random.choice(range(1, 46), 6, replace = True))) # 중복여부 => replace
print(list(np.random.choice(range(1, 46), 6, replace = False))) # 비복원

# 가중치
ar = 'air book cat d e f god'
ar = ar.split(' ')
print(ar)
print(np.random.choice(ar, 3, p=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.4])) # 선택확률 설정